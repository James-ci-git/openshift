apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: nodejs-dist-example
  template: nodejs-dist-example
message: |-
  The following service(s) have been created in your project: ${NAME}, ${NODEJS_SERVICE_NAME}.
metadata:
  annotations:
    description: |-
      An example Node.js application. For more information about using this template, including  considerations

      WARNING: Any data stored will be lost upon pod destruction. Only use this template for testing.
    iconClass: icon-nodejs
    openshift.io/display-name: Node.js dist (Ephemeral)
    openshift.io/documentation-url: https://github.com/sclorg/nodejs-ex
    openshift.io/long-description: This template defines resources needed to develop
      a NodeJS application, including a build configuration, application deployment configuration. 
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
    tags: node
    template.openshift.io/bindable: "false"
  name: nodejs-dist-example
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
      service.alpha.openshift.io/dependencies: '[{"name": "${NODEJS_SERVICE_NAME}","kind": "Service"}]'
    name: ${NAME}
  spec:
    ports:
    - name: web
      port: 8080
      targetPort: 8080
    selector:
      name: ${NAME}
- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME}
  spec:
    host: ${APPLICATION_DOMAIN}
    to:
      kind: Service
      name: ${NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the application image
    name: ${NAME}
  spec: {}
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: nodejs-example
  spec:
    tags:
    - annotations:
        supports: nodejs-example:10.15.3
        tags: builder,nodejs-example
        version: "10.15.3"
      from:
        kind: DockerImage
        name: docker.io/node:10.15.3
      name: "10.15.3"
    - annotations:
        supports: nodejs-example
        tags: builder,nodejs-example
      from:
        kind: ImageStreamTag
        name: "10.15.3"
      name: latest
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      description: Defines how to build the application
      openshift.io/generated-by: OpenShiftNewApp
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: nodejs-dist-example
      template: nodejs-dist-example
    name: ${NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:latest
    postCommit:
      script: npm install -g cnpm --registry=${NPM_MIRROR}
    source:
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: NPM_MIRROR
          value: ${NPM_MIRROR}
        from:
          kind: ImageStreamTag
          name: nodejs-example:${NODEJS_VERSION}
      type: Source
    triggers:
    - type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      name: ${NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${NAME}
        name: ${NAME}
      spec:
        containers:
        - env:
          - name: NODEJS_SERVICE_NAME
            value: ${NODEJS_SERVICE_NAME}
          image: ' '
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 3
          name: nodejs-dist-example
          ports:
          - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 3
            timeoutSeconds: 3
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - nodejs-dist-example
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
      type: ImageChange
    - type: ConfigChange
parameters:
- description: The name assigned to all of the frontend objects defined in this template.
  displayName: Name
  name: NAME
  required: true
  value: nodejs-dist-example
- description: Version of NodeJS image to be used (6, 8, or latest).
  displayName: Version of NodeJS Image
  name: NODEJS_VERSION
  required: true
  value: "10.1"
- description: Maximum amount of memory the Node.js container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 1024Mi
- description: The URL of the repository with your application source code.
  displayName: Git Repository URL
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/sclorg/nodejs-ex.git
- description: Set this to a branch name, tag or other ref of your repository if you are not using the default branch.
  displayName: Git Reference
  name: SOURCE_REPOSITORY_REF
  required: true
  value: master
- description: Set this to the relative path to your project if it is not in the root of your repository.
  displayName: Context Directory
  name: CONTEXT_DIR
- description: The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted.
  displayName: Application Hostname
  name: APPLICATION_DOMAIN
  required: true
  value: nodejs-dist-example.apps.xystack.com
- displayName: Database Service Name
  name: NODEJS_SERVICE_NAME
  required: true
  value: nodejs-dist-example
- description: The custom NPM mirror URL
  displayName: Custom NPM Mirror URL
  name: NPM_MIRROR
  required: true
  value: https://registry.npm.taobao.org
